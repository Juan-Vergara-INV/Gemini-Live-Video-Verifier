{
  "name": "Video Content Analyzer",
  "image": "mcr.microsoft.com/devcontainers/python:3.11",
  
  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {}
  },

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.pylint",
        "ms-python.black-formatter",
        "ms-toolsai.jupyter",
        "ms-vscode.vscode-json",
        "bradlc.vscode-tailwindcss",
        "formulahendry.auto-rename-tag",
        "esbenp.prettier-vscode"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.terminal.activateEnvironment": false,
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": "explicit"
        }
      }
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [8501],
  "portsAttributes": {
    "8501": {
      "label": "Streamlit App",
      "onAutoForward": "notify"
    }
  },

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "bash .devcontainer/setup.sh",

  // Use 'postStartCommand' to run commands after the container starts
  "postStartCommand": "echo 'Dev container is ready! Run: streamlit run video_analyzer.py'",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
  "remoteUser": "vscode",

  // Set environment variables
  "containerEnv": {
    "PYTHONPATH": "/workspaces/nose",
    "STREAMLIT_SERVER_HEADLESS": "true",
    "STREAMLIT_SERVER_ENABLE_CORS": "false"
  },

  // Configure mounts for better performance
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ]
}
